<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.cqu.CRM.Dao.EmployeeInfoMapper">
  <resultMap id="BaseResultMap" type="cn.edu.cqu.CRM.Pojo.EmployeeInfo">
    <result column="employee_id" jdbcType="INTEGER" property="employeeId" />
    <result column="employee_name" jdbcType="VARCHAR" property="employeeName" />
    <result column="user_type_id" jdbcType="INTEGER" property="userTypeId" />
    <result column="user_type_name" jdbcType="VARCHAR" property="userTypeName" />
    <result column="permission_id" jdbcType="INTEGER" property="permissionId" />
    <result column="permission_name" jdbcType="VARCHAR" property="permissionName" />
    <result column="employee_tel" jdbcType="DECIMAL" property="employeeTel" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    employee_id, employee_name, user_type_id, user_type_name, permission_id, permission_name, 
    employee_tel
  </sql>
  <select id="selectByExample" parameterType="cn.edu.cqu.CRM.Pojo.EmployeeInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from employee_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="cn.edu.cqu.CRM.Pojo.EmployeeInfoExample">
    delete from employee_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.edu.cqu.CRM.Pojo.EmployeeInfo">
    insert into employee_info (employee_id, employee_name, user_type_id, 
      user_type_name, permission_id, permission_name, 
      employee_tel)
    values (#{employeeId,jdbcType=INTEGER}, #{employeeName,jdbcType=VARCHAR}, #{userTypeId,jdbcType=INTEGER}, 
      #{userTypeName,jdbcType=VARCHAR}, #{permissionId,jdbcType=INTEGER}, #{permissionName,jdbcType=VARCHAR}, 
      #{employeeTel,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" parameterType="cn.edu.cqu.CRM.Pojo.EmployeeInfo">
    insert into employee_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="employeeId != null">
        employee_id,
      </if>
      <if test="employeeName != null">
        employee_name,
      </if>
      <if test="userTypeId != null">
        user_type_id,
      </if>
      <if test="userTypeName != null">
        user_type_name,
      </if>
      <if test="permissionId != null">
        permission_id,
      </if>
      <if test="permissionName != null">
        permission_name,
      </if>
      <if test="employeeTel != null">
        employee_tel,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="employeeId != null">
        #{employeeId,jdbcType=INTEGER},
      </if>
      <if test="employeeName != null">
        #{employeeName,jdbcType=VARCHAR},
      </if>
      <if test="userTypeId != null">
        #{userTypeId,jdbcType=INTEGER},
      </if>
      <if test="userTypeName != null">
        #{userTypeName,jdbcType=VARCHAR},
      </if>
      <if test="permissionId != null">
        #{permissionId,jdbcType=INTEGER},
      </if>
      <if test="permissionName != null">
        #{permissionName,jdbcType=VARCHAR},
      </if>
      <if test="employeeTel != null">
        #{employeeTel,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.edu.cqu.CRM.Pojo.EmployeeInfoExample" resultType="java.lang.Long">
    select count(*) from employee_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update employee_info
    <set>
      <if test="record.employeeId != null">
        employee_id = #{record.employeeId,jdbcType=INTEGER},
      </if>
      <if test="record.employeeName != null">
        employee_name = #{record.employeeName,jdbcType=VARCHAR},
      </if>
      <if test="record.userTypeId != null">
        user_type_id = #{record.userTypeId,jdbcType=INTEGER},
      </if>
      <if test="record.userTypeName != null">
        user_type_name = #{record.userTypeName,jdbcType=VARCHAR},
      </if>
      <if test="record.permissionId != null">
        permission_id = #{record.permissionId,jdbcType=INTEGER},
      </if>
      <if test="record.permissionName != null">
        permission_name = #{record.permissionName,jdbcType=VARCHAR},
      </if>
      <if test="record.employeeTel != null">
        employee_tel = #{record.employeeTel,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update employee_info
    set employee_id = #{record.employeeId,jdbcType=INTEGER},
      employee_name = #{record.employeeName,jdbcType=VARCHAR},
      user_type_id = #{record.userTypeId,jdbcType=INTEGER},
      user_type_name = #{record.userTypeName,jdbcType=VARCHAR},
      permission_id = #{record.permissionId,jdbcType=INTEGER},
      permission_name = #{record.permissionName,jdbcType=VARCHAR},
      employee_tel = #{record.employeeTel,jdbcType=DECIMAL}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>